(Prog (FunBind intToString ((VarPat i))
               (IfExp (BinExp (VarExp i) < (IntExp 0))
                      (AppExp (VarExp concat)
                              (TupleExp (StrExp "-") (AppExp (VarExp intToString) (UnExp unary - (VarExp i)))))
                      (IfExp (BinExp (VarExp i) == (IntExp 0)) (StrExp "0")
                             (IfExp (BinExp (VarExp i) == (IntExp 1)) (StrExp "1")
                                    (IfExp (BinExp (VarExp i) == (IntExp 2)) (StrExp "2")
                                           (IfExp (BinExp (VarExp i) == (IntExp 3)) (StrExp "3")
                                                  (IfExp (BinExp (VarExp i) == (IntExp 4)) (StrExp "4")
                                                         (IfExp (BinExp (VarExp i) == (IntExp 5)) (StrExp "5")
                                                                (IfExp (BinExp (VarExp i) == (IntExp 6)) (StrExp "6")
                                                                       (IfExp (BinExp (VarExp i) == (IntExp 7))
                                                                              (StrExp "7")
                                                                              (IfExp (BinExp (VarExp i) == (IntExp 8))
                                                                                     (StrExp "8")
                                                                                     (IfExp (BinExp (VarExp i) ==
                                                                                                    (IntExp 9))
                                                                                            (StrExp "9")
                                                                                            (AppExp (VarExp concat)
                                                                                                    (TupleExp (AppExp (VarExp intToString)
                                                                                                                      (BinExp (VarExp i)
                                                                                                                       /
                                                                                                                       (IntExp 10)))
                                                                                                              (AppExp (VarExp intToString)
                                                                                                                      (BinExp (VarExp i)
                                                                                                                       %
                                                                                                                       (IntExp 10)))))))))))))))))
      (TypeDcl Option (a) (Con None) (Con Some (VarTy a)))
      (FunBind optionToString ((VarPat aToString) (VarPat opt))
               (CaseExp (VarExp opt)
                        ((CaseRule (ConPat None) (StrExp "None")) (CaseRule (ConPat Some (VarPat x))
                                                                            (AppExp (VarExp concat)
                                                                                    (TupleExp (StrExp "Some(")
                                                                                              (AppExp (VarExp concat)
                                                                                                      (TupleExp (AppExp (VarExp aToString)
                                                                                                                       (VarExp x))
                                                                                                                (StrExp ")")))))))))
      (ValBind (VarPat ord0) (AppExp (VarExp sub) (TupleExp (StrExp "0") (IntExp 0))))
      (ValBind (VarPat ord9) (AppExp (VarExp sub) (TupleExp (StrExp "9") (IntExp 0))))
      (FunBind charToDigit ((VarPat c))
               (IfExp (BinExp (VarExp ord0) <= (VarExp c))
                      (IfExp (BinExp (VarExp c) <= (VarExp ord9))
                             (AppExp (ConExp Some) (BinExp (VarExp c) - (VarExp ord0))) (ConExp None)) (ConExp None)))
      (FunBind stringToInt ((VarPat s))
               (BindExp (ValBind (VarPat sz) (AppExp (VarExp size) (VarExp s)))
                        (BindExp (FunBind loop ((TuplePat (VarPat pos) (VarPat acc)))
                                          (IfExp (BinExp (VarExp pos) < (VarExp sz))
                                                 (CaseExp (AppExp (VarExp charToDigit)
                                                                  (AppExp (VarExp sub)
                                                                          (TupleExp (VarExp s) (VarExp pos))))
                                                          ((CaseRule (ConPat None) (ConExp None)) (CaseRule (ConPat Some
                                                                                                                    (VarPat i))
                                                                                                            (AppExp (VarExp loop)
                                                                                                                    (TupleExp (BinExp (VarExp pos)
                                                                                                                       +
                                                                                                                       (IntExp 1))
                                                                                                                       (BinExp (BinExp (VarExp acc)
                                                                                                                       *
                                                                                                                       (IntExp 10))
                                                                                                                       +
                                                                                                                       (VarExp i)))))))
                                                 (AppExp (ConExp Some) (VarExp acc))))
                                 (IfExp (BinExp (IntExp 0) < (VarExp sz))
                                        (AppExp (VarExp loop) (TupleExp (IntExp 0) (IntExp 0))) (ConExp None)))))
      (DoExpBind (CaseExp (VarExp arguments)
                          ((CaseRule (ConPat Cons (VarPat s) WildPat)
                                     (BindExp (DoExpBind (AppExp (VarExp print)
                                                                 (AppExp (AppExp (VarExp optionToString)
                                                                                 (VarExp intToString))
                                                                         (AppExp (VarExp stringToInt) (VarExp s)))))
                                              (AppExp (VarExp print) (StrExp "\n")))) (CaseRule (ConPat Nil)
                                                                                                (TupleExp))))))

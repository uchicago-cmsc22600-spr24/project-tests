program (arguments0060) =
   fun intToString_code0072 (i0062) =
      if IntLt(i0062,0) then
         let _t10064 = IntNeg(i0062) in
         let _t00063 = intToString_code0072 (_t10064) in
         let _t20065 = call _mml_concat("-",_t00063) in
            ret _t20065
      else if IntEq(i0062,0) then
         ret "0"
      else if IntEq(i0062,1) then
         ret "1"
      else if IntEq(i0062,2) then
         ret "2"
      else if IntEq(i0062,3) then
         ret "3"
      else if IntEq(i0062,4) then
         ret "4"
      else if IntEq(i0062,5) then
         ret "5"
      else if IntEq(i0062,6) then
         ret "6"
      else if IntEq(i0062,7) then
         ret "7"
      else if IntEq(i0062,8) then
         ret "8"
      else if IntEq(i0062,9) then
         ret "9"
      else
         let _t40067 =
            if IntNEq(10,0) then
               let _t50068 = IntDiv(i0062,10) in
                  ret _t50068
            else
               let _t60069 = call _mml_fail("Divide by zero") in
                  ret _t60069
         in
         let _t30066 = intToString_code0072 (_t40067) in
         let _t8006B =
            if IntNEq(10,0) then
               let _t9006C = IntMod(i0062,10) in
                  ret _t9006C
            else
               let _t10006D = call _mml_fail("Remainder by zero") in
                  ret _t10006D
         in
         let _t7006A = intToString_code0072 (_t8006B) in
         let _t11006E = call _mml_concat(_t30066,_t7006A) in
            ret _t11006E
   in
   let _t130071 = intToString_code0072 (42) in
   let _t120070 = call _mml_concat(_t130071,"\n") in
   let un006F = call _mml_print(_t120070) in
      ret 0

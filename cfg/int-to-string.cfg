ptr $intToString_code0074: {
   fun $intToString_code0074 (i007B) {
      goto $intToString_code0072_hdr007A (i007B)
   }
   and $intToString_code0072_hdr007A (i007C) {
      if IntLt (i007C, 0)
         then goto $then007D (i007C)
         else goto $else0082 (i007C)
   }
   and $else0082 (i0083) {
      if IntEq (i0083, 0)
         then goto $then0084 ()
         else goto $else0085 (i0083)
   }
   and $else0085 (i0086) {
      if IntEq (i0086, 1)
         then goto $then0087 ()
         else goto $else0088 (i0086)
   }
   and $else0088 (i0089) {
      if IntEq (i0089, 2)
         then goto $then008A ()
         else goto $else008B (i0089)
   }
   and $else008B (i008C) {
      if IntEq (i008C, 3)
         then goto $then008D ()
         else goto $else008E (i008C)
   }
   and $else008E (i008F) {
      if IntEq (i008F, 4)
         then goto $then0090 ()
         else goto $else0091 (i008F)
   }
   and $else0091 (i0092) {
      if IntEq (i0092, 5)
         then goto $then0093 ()
         else goto $else0094 (i0092)
   }
   and $else0094 (i0095) {
      if IntEq (i0095, 6)
         then goto $then0096 ()
         else goto $else0097 (i0095)
   }
   and $else0097 (i0098) {
      if IntEq (i0098, 7)
         then goto $then0099 ()
         else goto $else009A (i0098)
   }
   and $else009A (i009B) {
      if IntEq (i009B, 8)
         then goto $then009C ()
         else goto $else009D (i009B)
   }
   and $else009D (i009E) {
      if IntEq (i009E, 9)
         then goto $then009F ()
         else goto $else00A0 (i009E)
   }
   and $else00A0 (i00A1) {
      if IntNEq (10, 0)
         then goto $then00B2 (i00A1)
         else goto $else00B5 (i00A1)
   }
   and $else00B5 (i00B6) {
      let _t600B7 = call _mml_fail ("Divide by zero")
      goto $join00A2 (_t600B7, i00B6)
   }
   and $then00B2 (i00B3) {
      let _t500B4 = IntDiv (i00B3,10)
      goto $join00A2 (_t500B4, i00B3)
   }
   and $join00A2 (_t400A3, i00A4) {
      let _t300A5 = apply $intToString_code0074 (_t400A3)
      if IntNEq (10, 0)
         then goto $then00AB (i00A4, _t300A5)
         else goto $else00AF (_t300A5)
   }
   and $else00AF (_t300B0) {
      let _t1000B1 = call _mml_fail ("Remainder by zero")
      goto $join00A6 (_t1000B1, _t300B0)
   }
   and $then00AB (i00AC, _t300AD) {
      let _t900AE = IntMod (i00AC,10)
      goto $join00A6 (_t900AE, _t300AD)
   }
   and $join00A6 (_t800A7, _t300A8) {
      let _t700A9 = apply $intToString_code0074 (_t800A7)
      let _t1100AA = call _mml_concat (_t300A8,_t700A9)
      ret _t1100AA
   }
   and $then009F () {
      ret "9"
   }
   and $then009C () {
      ret "8"
   }
   and $then0099 () {
      ret "7"
   }
   and $then0096 () {
      ret "6"
   }
   and $then0093 () {
      ret "5"
   }
   and $then0090 () {
      ret "4"
   }
   and $then008D () {
      ret "3"
   }
   and $then008A () {
      ret "2"
   }
   and $then0087 () {
      ret "1"
   }
   and $then0084 () {
      ret "0"
   }
   and $then007D (i007E) {
      let _t1007F = IntNeg (i007E)
      let _t00080 = apply $intToString_code0074 (_t1007F)
      let _t20081 = call _mml_concat ("-",_t00080)
      ret _t20081
   }
}
i63 $_mml_entry: {
   fun $_mml_entry (arguments0076) {
      let _t130077 = apply $intToString_code0074 (42)
      let _t120078 = call _mml_concat (_t130077,"\n")
      let un0079 = call _mml_print (_t120078)
      ret 0
   }
}

i63 $lp_code0092: {
   fun $lp_code0092 (lp00A4, i00A5) {
      goto $lp_code008B_hdr00A3 (lp00A4, i00A5)
   }
   and $lp_code008B_hdr00A3 (lp00A6, i00A7) {
      let f00A8 = #0(lp00A6)
      let n00A9 = #1(lp00A6)
      if IntLt (i00A7, n00A9)
         then goto $then00AA (i00A7, lp00A6, f00A8)
         else goto $else00B1 ()
   }
   and $else00B1 () {
      ret 0
   }
   and $then00AA (i00AB, lp00AC, f00AD) {
      let cp00AE = #0(f00AD)
      let un00AF = apply cp00AE (f00AD,i00AB)
      let _t000B0 = IntAdd (i00AB,1)
      goto $lp_code008B_hdr00A3 (lp00AC, _t000B0)
   }
}
i63 $repeat_code0091: {
   fun $repeat_code0091 (tpl009F) {
      let f00A0 = #0(tpl009F)
      let n00A1 = #1(tpl009F)
      let lp00A2 = alloc [f00A0,n00A1]
      apply $lp_code0092 (lp00A2, 0)
   }
}
i63 $ignore_code0093: {
   fun $ignore_code0093 (ignore009D, x009E) {
      ret 0
   }
}
i63 $_mml_entry: {
   fun $_mml_entry (arguments0095) {
      let ignore0096 = alloc [$ignore_code0093]
      let _t40097 = alloc [ignore0096,5]
      let _t30098 = apply $repeat_code0091 (_t40097)
      let un0099 = apply $ignore_code0093 (ignore0096,_t30098)
      let _t6009A = alloc [ignore0096,6]
      let _t5009B = apply $repeat_code0091 (_t6009A)
      let un009C = apply $ignore_code0093 (ignore0096,_t5009B)
      ret 0
   }
}

i63 $check_code0095: {
   fun $check_code0095 (tpl00BB) {
      let msg00BC = #0(tpl00BB)
      let result00BD = #1(tpl00BB)
      let expected00BE = #2(tpl00BB)
      let un00BF = call _mml_print ("test ")
      let un00C0 = call _mml_print (msg00BC)
      if IntEq (result00BD, expected00BE)
         then goto $then00C1 ()
         else goto $else00C3 ()
   }
   and $else00C3 () {
      let _t100C4 = call _mml_print (" FAIL\n")
      ret _t100C4
   }
   and $then00C1 () {
      let _t000C2 = call _mml_print (" OK\n")
      ret _t000C2
   }
}
i63 $_mml_entry: {
   fun $_mml_entry (arguments0097) {
      let _t30098 = IntAdd (1,1)
      let _t20099 = alloc ["1+1",_t30098,2]
      let un009A = apply $check_code0095 (_t20099)
      let _t5009B = IntAdd (1,2)
      let _t4009C = alloc ["1+2",_t5009B,3]
      let un009D = apply $check_code0095 (_t4009C)
      let _t7009E = IntSub (1,1)
      let _t6009F = alloc ["1-1",_t7009E,0]
      let un00A0 = apply $check_code0095 (_t6009F)
      let _t900A1 = IntSub (1,2)
      let _t1000A2 = IntNeg (1)
      let _t800A3 = alloc ["1-2",_t900A1,_t1000A2]
      let un00A4 = apply $check_code0095 (_t800A3)
      let _t1200A5 = IntMul (1,1)
      let _t1100A6 = alloc ["1*1",_t1200A5,1]
      let un00A7 = apply $check_code0095 (_t1100A6)
      let _t1400A8 = IntMul (12,4)
      let _t1300A9 = alloc ["12*4",_t1400A8,48]
      let un00AA = apply $check_code0095 (_t1300A9)
      if IntNEq (4, 0)
         then goto $then00B7 ()
         else goto $else00B9 ()
   }
   and $else00B9 () {
      let _t1800BA = call _mml_fail ("Divide by zero")
      goto $join00AB (_t1800BA)
   }
   and $then00B7 () {
      let _t1700B8 = IntDiv (12,4)
      goto $join00AB (_t1700B8)
   }
   and $join00AB (_t1600AC) {
      let _t1500AD = alloc ["12/4",_t1600AC,3]
      let un00AE = apply $check_code0095 (_t1500AD)
      if IntNEq (5, 0)
         then goto $then00B3 ()
         else goto $else00B5 ()
   }
   and $else00B5 () {
      let _t2200B6 = call _mml_fail ("Divide by zero")
      goto $join00AF (_t2200B6)
   }
   and $then00B3 () {
      let _t2100B4 = IntDiv (12,5)
      goto $join00AF (_t2100B4)
   }
   and $join00AF (_t2000B0) {
      let _t1900B1 = alloc ["12/5",_t2000B0,2]
      let un00B2 = apply $check_code0095 (_t1900B1)
      ret 0
   }
}
